@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix fnml:   <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix cv: <http://data.europa.eu/m8g/> .
@prefix locn: <http://www.w3.org/ns/locn#> .
@prefix ex: <http://meaningfy.ws/mapping#> .
@prefix voc: <http://meaningfy.ws/vocabulary#> .
@prefix : <http://meaningfy.ws/resource#> .

ex:Organization a rr:TriplesMap ;
    rdfs:label "Organization" ;
    rml:logicalSource [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rdfs:label "Company" ;
            rdfs:comment "Type declaration for node element <efac:Company>" ;
            rr:template "http://meaningfy.ws/resource#Organization_{cac:PartyIdentification/cbc:ID}" ;
            rr:class org:Organization ;
        ] ;
    rr:predicateObjectMap [
            rdfs:label "Name" ;
            rdfs:comment "Child field element <cbc:Name> mapping to epo:hasLegalName" ;
            rr:predicate epo:hasLegalName ;
            rr:objectMap [
                rml:reference "cac:PartyName/cbc:Name" ;
            ]
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "Company PostalAddress" ;
            rdfs:comment "Relationship mapping of cv:registeredAddress from Company to PostalAddress" ;
            rr:predicate cv:registeredAddress ;
            rr:objectMap
                [
                    rr:parentTriplesMap ex:Address ;
                    rr:joinCondition [
                        rr:child "path(.)" ;
                        rr:parent "path(..)" ;
                    ] ;
                ] ;
        ] ;
.

ex:Address a rr:TriplesMap ;
    rdfs:label "Address" ;
    rml:logicalSource [
            rml:source "data/source.xml" ;
            rml:iterator "/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PostalAddress" ;
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap [
            rdfs:label "PostalAddress" ;
            rdfs:comment "Type declaration for node element <cac:PostalAddress>" ;
            rr:template "http://meaningfy.ws/resource#Address_{generate-id(.)}" ;
            rr:class locn:Address
        ] ;
    rr:predicateObjectMap [
            rdfs:label "Full Address" ;
            rdfs:comment "Aggregate mapping to locn:fullAddress of child field elements representing Department, Street, Streetline 1, Streetline 2, Organisation City, Organisation Post Code, Organisation Country Code" ;
            rr:predicate locn:fullAddress ;
            rr:objectMap
                [
                    rml:reference "replace(replace(cbc:Department || ', ' || cbc:StreetName || ', ' || cbc:AdditionalStreetName || ', ' || cac:AddressLine/cbc:Line || ', ' || cbc:CityName || ', ' || cbc:PostalZone || ', ' || cac:Country/cbc:IdentificationCode, '(, )+', ', '),  '^, |, $', '')" ;
                ] ;
        ] ;
    rr:predicateObjectMap [
            rdfs:label "Country Code";
            rdfs:comment "Child field element <cbc:IdentificationCode> mapping to epo:hasCountryCode" ;
            rr:predicate epo:hasCountryCode ;
            rr:objectMap
                [
                    rdfs:label "voc:country" ;
                    rdfs:comment "Country authority table URI value" ;
                    rr:parentTriplesMap voc:country ;
                    rr:joinCondition [
                        rr:child "cac:Country/cbc:IdentificationCode" ;
                        rr:parent "code.value" ;
                    ] ;
                ] ;
        ] ;
.

voc:country a rr:TriplesMap ;
    rml:logicalSource
        [
            rml:source "transformation/resources/country.json" ;
            rml:iterator "$.results.bindings[*]" ;
            rml:referenceFormulation ql:JSONPath ;
        ] ;
    rr:subjectMap
        [
            rml:reference "conceptURI.value" ;
        ] ;
.
