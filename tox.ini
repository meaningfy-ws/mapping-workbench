[tox]
# skipping the setup.py installation/requirement for the moment
skipsdist = true
envlist =
#py37,py38,py39,py310 # skipping multiple python distros for the moment
    py38

[testenv]
description = Running tests in the corresponding environment
passenv = *

###

# CORE ENV :: START

[testenv:core-opts]
deps =
    -r mapping_workbench/core/requirements.txt
    -r mapping_workbench/core/requirements.dev.txt
source = mapping_workbench/core
unit-command = {envpython} -m pytest tests/unit/core --cov
e2e-command = {envpython} -m pytest tests/e2e/core --cov

[testenv:unit-core]
description = Running UNIT tests for CORE
#deps = {[testenv:core-opts]deps}
#commands = {[testenv:core-opts]unit-command}
source = {[testenv:core-opts]source}

[testenv:e2e-core]
description = Running E2E tests for CORE
deps = {[testenv:core-opts]deps}
commands = {[testenv:core-opts]e2e-command}
source = {[testenv:core-opts]source}

[testenv:features-core]
commands =
    {envpython} -m pytest --alluredir=./tests/reports/allure/test_results/ ./tests/features/core
    allure generate --allow-file-access-from-files ./tests/reports/allure/test_results/ --clean -o ./tests/reports/allure/report/
    allure-combine ./tests/reports/allure/report/ --remove-temp-files

[testenv:core]
description = Running tests for CORE
deps = {[testenv:core-opts]deps}
commands =
    {[testenv:core-opts]unit-command}
    {[testenv:core-opts]e2e-command}
source = {[testenv:core-opts]source}

# CORE ENV :: END

###

# TOOLCHAIN ENV :: START

[testenv:toolchain-opts]
deps =
    -r mapping_workbench/toolchain/requirements.txt
    -r mapping_workbench/toolchain/requirements.dev.txt
source = mapping_workbench/toolchain
unit-command = {envpython} -m pytest tests/unit/toolchain --cov
e2e-command = {envpython} -m pytest tests/e2e/toolchain --cov

[testenv:unit-toolchain]
description = Running UNIT tests for TOOLCHAIN
deps = {[testenv:toolchain-opts]deps}
commands = {[testenv:toolchain-opts]unit-command}
source = {[testenv:toolchain-opts]source}

[testenv:e2e-toolchain]
description = Running E2E tests for TOOLCHAIN
deps = {[testenv:toolchain-opts]deps}
commands = {[testenv:toolchain-opts]e2e-command}
source = {[testenv:toolchain-opts]source}

[testenv:features-toolchain]
commands =
    {envpython} -m pytest --alluredir=./tests/reports/allure/test_results/ ./tests/features/toolchain
    allure generate --allow-file-access-from-files ./tests/reports/allure/test_results/ --clean -o ./tests/reports/allure/report/
    allure-combine ./tests/reports/allure/report/ --remove-temp-files

[testenv:toolchain]
description = Running tests for TOOLCHAIN
deps = {[testenv:toolchain-opts]deps}
commands =
    {[testenv:toolchain-opts]unit-command}
    {[testenv:toolchain-opts]e2e-command}
source = {[testenv:toolchain-opts]source}

# TOOLCHAIN ENV :: END

###

addopts =
    --cov=ted_sws
    --cov-report=html
    --cov-report=term
    --cov-report=xml
    --junitxml=junit_report.xml
    -r a
    -q
    -v -s
    --gherkin-terminal-reporter
    --disable-pytest-warnings
    --disable-warnings

[pytest]
log_cli = true
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
